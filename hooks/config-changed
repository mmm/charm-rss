#!/bin/bash
set -eux

[ -f lib/netflix/utils.sh ] && . lib/netflix/utils.sh 
#[ -f lib/netflix/rss-utils.sh ] && . lib/netflix/rss-utils.sh 
#[ -f lib/netflix/eureka-utils.sh ] && . lib/netflix/eureka-utils.sh 

build_rss() {
  local rss_build_dir=$1
  pull_fresh_source https://github.com/Netflix/recipes-rss.git $rss_build_dir
  gradle_build $rss_build_dir
}
[ "$(config-get build_rss)" == "True" ] && build_rss $(config-get rss_build_dir)

build_eureka() {
  local eureka_build_dir=$1
  pull_fresh_source https://github.com/Netflix/eureka.git $eureka_build_dir
  gradle_build $eureka_build_dir
}
[ "$(config-get build_eureka)" == "True" ] && build_eureka $(config-get eureka_build_dir)

set_tomcat_port() {
  local port=$1
  sed -i "s/8080/$port/g" /etc/tomcat6/server.xml
  #TODO use a template
  if (( $port < 1024 )); then
    sed -i 's/#AUTHBIND=no/AUTHBIND=yes/' /etc/default/tomcat6
    #TODO use a template
  fi
  open-port $port/TCP
}
tomcat_port=$(config-get tomcat_port)
[ -n "$tomcat_port" ] && [ "$tomcat_port" != "8080" ] && set_tomcat_port $tomcat_port

install_rss() {
  local build_dir="$(config-get rss_build_dir)/rss-middletier/build/libs/"
  local jar_file=$(find $build_dir -name "*SNAPSHOT.jar")
  local rss_jar_dir="$(config-get rss_build_dir)/rss-middletier.jar"
  mkdir -p $rss_jar_dir
  [ -f "$jar_file" ] && ( cd $rss_jar_dir && jar xvf $jar_file )
}
#TODO add other ways of getting a war file besides building
[ "$(config-get build_rss)" == "True" ] && install_rss

install_eureka() {
  local build_dir="$(config-get eureka_build_dir)/eureka-server/build/libs/"
  local war_file=$(find $build_dir -name "*.war")
  local webapps_dir=/var/lib/tomcat6/webapps
  [ -f "$war_file" ] && cp $war_file $webapps_dir/eureka.war
}
#TODO add other ways of getting a war file besides building
[ "$(config-get build_eureka)" == "True" ] && install_eureka

service tomcat6 restart

exit 0
